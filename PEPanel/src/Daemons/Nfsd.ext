from Components.Console import Console
from Tools.Directories import fileExists
import os

def NFSDStatus():
	ret = False
	pids = os.popen("ps | grep nfsd | grep -v grep | wc -l")
	try:
		count = int(pids.read())
		if count > 0:
			ret = True
	except Exception, e:
		pass
		
	pids.close()
	return ret
	
def NFSDStop():
	Console().ePopen("/etc/init.d/nfsserver stop")
	
def NFSDStart():
	Console().ePopen("/etc/init.d/nfsserver start")
	
def NFSDBoot(enabled):
	if enabled:
		Console().ePopen("ln -s /etc/init.d/nfsserver /etc/rc0.d/K20nfsserver")
		Console().ePopen("ln -s /etc/init.d/nfsserver /etc/rc1.d/K20nfsserver")
		Console().ePopen("ln -s /etc/init.d/nfsserver /etc/rc2.d/S20nfsserver")
		Console().ePopen("ln -s /etc/init.d/nfsserver /etc/rc4.d/S20nfsserver")
		Console().ePopen("ln -s /etc/init.d/nfsserver /etc/rc5.d/S20nfsserver")
		Console().ePopen("ln -s /etc/init.d/nfsserver /etc/rc6.d/K20nfsserver")
		Console().ePopen("ln -s /etc/init.d/nfsserver /etc/rc3.d/S20nfsserver")
		Console().ePopen("ln -s /etc/init.d/nfsserver /etc/rc3.d/K20nfsserver")
	else:
		Console().ePopen("rm -f /etc/rc0.d/K20nfsserver")
		Console().ePopen("rm -f /etc/rc1.d/K20nfsserver")
		Console().ePopen("rm -f /etc/rc2.d/S20nfsserver")
		Console().ePopen("rm -f /etc/rc4.d/S20nfsserver")
		Console().ePopen("rm -f /etc/rc5.d/S20nfsserver")
		Console().ePopen("rm -f /etc/rc6.d/K20nfsserver")
		Console().ePopen("rm -f /etc/rc3.d/S20nfsserver")
		Console().ePopen("rm -f /etc/rc3.d/K20nfsserver")
	
def NFSDInstalled():
	return fileExists("/usr/sbin/rpc.nfsd")
	
daemon_name = "NFSd"
daemon_description = "Network file system daemon"
daemon_icon = "nfsd.png"
daemon_package = "enigma2-plugin-pli-nfsserver"
daemon_fnc_status = NFSDStatus
daemon_fnc_installed = NFSDInstalled
daemon_fnc_stop = NFSDStop
daemon_fnc_start = NFSDStart
daemon_fnc_boot = NFSDBoot
daemon_class_config = "NFSServerSetup"
